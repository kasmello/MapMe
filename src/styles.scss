
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$MapMe-primary: mat.define-palette(mat.$indigo-palette);
$MapMe-primarydark: mat.define-palette(mat.$teal-palette);
$MapMe-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$MapMe-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$MapMe-theme: mat.define-light-theme((
  color: (
    primary: $MapMe-primary,
    accent: $MapMe-accent,
    warn: $MapMe-warn,
  )
));

$MapMe-dark-theme: mat.define-dark-theme((
  color: (
    primary: $MapMe-primarydark,
    accent: $MapMe-accent,
    warn: $MapMe-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.

.light {
  @include mat.all-component-themes($MapMe-theme);
  
}

.dark {
  @include mat.all-component-themes($MapMe-dark-theme);
  
}

.light-label {
  color: #000000;
}

.dark-label {
  color: #ffffff;
}


/* You can add global styles to this file, and also import other style files */

html, body { 
  height: 100%;
   
}
body { 
  margin: 0; 
  font-family: Roboto, "Helvetica Neue", sans-serif;
  
}

body.light {
  background-color: #ddceb5;
}
body.dark {
  background-color: #2a2b2b;
}

mat-form-field {
  height: 4em;
  font-size: 1em;
  width: 65vw;
  input {
    padding-bottom: 2px;
    font-size: 10px;
  }
}

.scale-up {
  transform: scale(1.8);
}

.add-location {
  width: 3.2em!important;
  min-width: unset!important;
  height: 3.2em!important;
  min-height: unset!important;

}


// .add-location:hover {
//   background-color: #1976d2;
// }

.destinationContainer {
  margin-bottom: 1vh;
}

.columnContainer {
  display: flex;
  flex-direction: column;
  margin-left: 15vw;
  margin-top: 5vw; 
}

.handle {
  cursor: move;
}

// .cdk-drag-preview {
//   box-sizing: border-box;
//   border-radius: 4px;
//   // box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
//   //             0 8px 10px 1px rgba(0, 0, 0, 0.14),
//   //             0 3px 14px 2px rgba(0, 0, 0, 0.12);
// }

.cdk-drag-placeholder {
  opacity: 0;
}

.cdk-drop-list-dragging .cdk-drag {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.cdk-drag-animating {
  transition: transform 150ms cubic-bezier(0, 0, 0.2, 1);
}

.title {
  font-size: 5em;
  text-align: center;
  margin: 0;
  // margin-top: 50vh;
  // transform: translateY(-50%);
  transition: font-size 5s ease-in-out;
}

.listContainer {
  margin-top: 0;
}

.more-destination{
  transform: scale(1.4);
  width: 1.8em!important;
  min-width: unset!important;
  height:1.8em!important;
  min-height: unset!important;
  margin-left: 2vw; 
  margin-top: 2vh;
  // margin-top: -1.3vh;
}

.day-night-toggle{
  position: absolute;
  right: 2vw;
  top: 1vh;
}

// .listContainer.cdk-drop-list-dragging .destinationContainer:not(.cdk-drag-placeholder) {
//   transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
// }